AWSTemplateFormatVersion: '2010-09-09'
Description: Builds the CodePipeline components 

Parameters:
# ----------- Required ----------- #
  pOwner:
    Description: Owner's Name
    AllowedPattern: ^([A-Za-z0-9]*)?$
    Type: String
  pEmail:
    Description: Owner's e-Mail'
    AllowedPattern: ^([A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,3})?$
    Type: String
  pResourceName:
    Description: Name for the Resource
    AllowedPattern: ^([A-Za-z0-9]*)?$
    Type: String
  pRegion:
    Type: String
    Description: Region
    Default: ""
  pRootDir:
    Type: String
    Description: Root Directory (CloudFormation) for the project
    Default: CloudFormation
  pCodePipelineServiceRole:
    Type: String
    Description: Codepipeline Service Role
    Default: ""
  pCodePipelineActionRole:
    Type: String
    Description: Cloudformation Action Role
    Default: ""

Resources:
  rCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        EncryptionKey:
          Id: "{{resolve:ssm:PipelineKmsKey:1}}"
          Type: KMS
        Location: "{{resolve:ssm:PipelineArtifactBucket:1}}"
        Type: S3
      Name: !Ref pResourceName
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineServiceRole}
      Stages:
        - Name: Source
          Actions:
            - Name: Application_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: "{{resolve:ssm:PipelineSourceBucket:1}}"
                S3ObjectKey: !Sub ${pResourceName}/deploy.zip
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: Source
              RunOrder: 1

        - Name: BuildAndPackage
          Actions:
            - Name: Update_CodePipeline
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: update-codepipeline
              InputArtifacts:
                - Name: Source
              OutputArtifacts: []
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1
            - Name: Application_Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Sub ${pResourceName}-CI-${pRegion}
              InputArtifacts:
              - Name: Source
              OutputArtifacts:
              - Name: Build
              RunOrder: 2

        - Name: Deploy
          Actions:
            - Name: Cleanup_Lambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-lambdas-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

            - Name: Cleanup_webEC2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-webEC2-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

            - Name: Deploy_EmptyS3Lambda
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-EmptyS3Lambda-CloudFormation-Stack
                TemplateConfiguration: !Sub Source::${pRootDir}/parameters/S3_params.json
                TemplatePath: !Sub Source::${pRootDir}/EmptyS3Lambda.yaml
                OutputFileName: LambdaEmptyS3Output.json
              InputArtifacts:
                - Name: Build
                - Name: Source
              OutputArtifacts: 
                - Name: EmptyS3Lambda
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

            - Name: Deploy_DynamoDBTable
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-DynamoDBTable-CloudFormation-Stack
                TemplateConfiguration: !Sub Source::${pRootDir}/parameters/DynamoDB_params.json
                TemplatePath: !Sub Source::${pRootDir}/DynamoDB.yaml
                OutputFileName: DynamoDBOutput.json
              InputArtifacts:
                - Name: Build
                - Name: Source
              OutputArtifacts: 
                - Name: DynamoDBTable
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

            - Name: Deploy_S3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-S3-CloudFormation-Stack
                TemplateConfiguration: !Sub Source::${pRootDir}/parameters/S3_params.json
                TemplatePath: !Sub Source::${pRootDir}/S3.yaml
                OutputFileName: S3Output.json
              InputArtifacts:
                - Name: Build
                - Name: Source
              OutputArtifacts:
                - Name: KMS_ID
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 2

            - Name: Deploy_ALB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-ALB-CloudFormation-Stack
                TemplateConfiguration: !Sub Source::${pRootDir}/parameters/ALB_params.json
                TemplatePath: !Sub Source::${pRootDir}/ALB.yaml
                OutputFileName: ALBOutput.json
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Deploy_ALB
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 2

            - Name: Deploy_webEC2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-webEC2-CloudFormation-Stack
                TemplateConfiguration: !Sub Source::${pRootDir}/parameters/webEC2_params.json
                TemplatePath: !Sub Source::${pRootDir}/webEC2.yaml
                OutputFileName: webEC2Output.json
              InputArtifacts:
                - Name: Source
                - Name: KMS_ID
                - Name: Deploy_ALB
              OutputArtifacts: []
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 3

            - Name: Deploy_Lambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-lambdas-CloudFormation-Stack
                TemplateConfiguration: !Sub Source::${pRootDir}/parameters/lambda_params.json
                TemplatePath: !Sub Source::${pRootDir}/Lambdas.yaml
                OutputFileName: LambdaOutput.json
              InputArtifacts:
                - Name: Build
                - Name: Source
                - Name: Deploy_ALB
              OutputArtifacts: []
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 3

        - Name: Decommission_Approval
          Actions:
            - Name: DecommissionApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              InputArtifacts: []
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

        - Name: Decommission
          Actions:
            - Name: Cleanup_Lambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-lambdas-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

            - Name: Cleanup_webEC2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-webEC2-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

            - Name: Cleanup_ALB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-ALB-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 2

        - Name: Decommission_S3_Approval
          Actions:
            - Name: DecommissionS3DataApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              InputArtifacts: []
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1

        - Name: Decommission_S3
          Actions:
            - Name: Cleanup_S3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-S3-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 1
            - Name: Cleanup_Empty_S3_Lambda
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: DELETE_ONLY
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
                StackName: !Sub ${pResourceName}-EmptyS3Lambda-CloudFormation-Stack
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${pCodePipelineActionRole}
              RunOrder: 2

Outputs:
  oCodePipeline:
    Value: !Ref rCodePipeline
